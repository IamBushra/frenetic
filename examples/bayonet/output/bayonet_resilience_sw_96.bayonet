
num_steps 194;

topology{
  nodes{ H0, H1, S0, S1, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S2, S20, S21, S22, S23, S24, S25, S26, S27, S28, S29, S3, S30, S31, S32, S33, S34, S35, S36, S37, S38, S39, S4, S40, S41, S42, S43, S44, S45, S46, S47, S48, S49, S5, S50, S51, S52, S53, S54, S55, S56, S57, S58, S59, S6, S60, S61, S62, S63, S64, S65, S66, S67, S68, S69, S7, S70, S71, S72, S73, S74, S75, S76, S77, S78, S79, S8, S80, S81, S82, S83, S84, S85, S86, S87, S88, S89, S9, S90, S91, S92, S93, S94, S95 }
  links{
    (H0,pt1) <-> (S0,pt1),
    (S0,pt2) <-> (S1,pt1),
    (S0,pt3) <-> (S2,pt1),
    (S1,pt2) <-> (S3,pt1),
    (S10,pt2) <-> (S11,pt2),
    (S11,pt3) <-> (S12,pt1),
    (S12,pt2) <-> (S13,pt1),
    (S12,pt3) <-> (S14,pt1),
    (S13,pt2) <-> (S15,pt1),
    (S14,pt2) <-> (S15,pt2),
    (S15,pt3) <-> (S16,pt1),
    (S16,pt2) <-> (S17,pt1),
    (S16,pt3) <-> (S18,pt1),
    (S17,pt2) <-> (S19,pt1),
    (S18,pt2) <-> (S19,pt2),
    (S19,pt3) <-> (S20,pt1),
    (S2,pt2) <-> (S3,pt2),
    (S20,pt2) <-> (S21,pt1),
    (S20,pt3) <-> (S22,pt1),
    (S21,pt2) <-> (S23,pt1),
    (S22,pt2) <-> (S23,pt2),
    (S23,pt3) <-> (S24,pt1),
    (S24,pt2) <-> (S25,pt1),
    (S24,pt3) <-> (S26,pt1),
    (S25,pt2) <-> (S27,pt1),
    (S26,pt2) <-> (S27,pt2),
    (S27,pt3) <-> (S28,pt1),
    (S28,pt2) <-> (S29,pt1),
    (S28,pt3) <-> (S30,pt1),
    (S29,pt2) <-> (S31,pt1),
    (S3,pt3) <-> (S4,pt1),
    (S30,pt2) <-> (S31,pt2),
    (S31,pt3) <-> (S32,pt1),
    (S32,pt2) <-> (S33,pt1),
    (S32,pt3) <-> (S34,pt1),
    (S33,pt2) <-> (S35,pt1),
    (S34,pt2) <-> (S35,pt2),
    (S35,pt3) <-> (S36,pt1),
    (S36,pt2) <-> (S37,pt1),
    (S36,pt3) <-> (S38,pt1),
    (S37,pt2) <-> (S39,pt1),
    (S38,pt2) <-> (S39,pt2),
    (S39,pt3) <-> (S40,pt1),
    (S4,pt2) <-> (S5,pt1),
    (S4,pt3) <-> (S6,pt1),
    (S40,pt2) <-> (S41,pt1),
    (S40,pt3) <-> (S42,pt1),
    (S41,pt2) <-> (S43,pt1),
    (S42,pt2) <-> (S43,pt2),
    (S43,pt3) <-> (S44,pt1),
    (S44,pt2) <-> (S45,pt1),
    (S44,pt3) <-> (S46,pt1),
    (S45,pt2) <-> (S47,pt1),
    (S46,pt2) <-> (S47,pt2),
    (S47,pt3) <-> (S48,pt1),
    (S48,pt2) <-> (S49,pt1),
    (S48,pt3) <-> (S50,pt1),
    (S49,pt2) <-> (S51,pt1),
    (S5,pt2) <-> (S7,pt1),
    (S50,pt2) <-> (S51,pt2),
    (S51,pt3) <-> (S52,pt1),
    (S52,pt2) <-> (S53,pt1),
    (S52,pt3) <-> (S54,pt1),
    (S53,pt2) <-> (S55,pt1),
    (S54,pt2) <-> (S55,pt2),
    (S55,pt3) <-> (S56,pt1),
    (S56,pt2) <-> (S57,pt1),
    (S56,pt3) <-> (S58,pt1),
    (S57,pt2) <-> (S59,pt1),
    (S58,pt2) <-> (S59,pt2),
    (S59,pt3) <-> (S60,pt1),
    (S6,pt2) <-> (S7,pt2),
    (S60,pt2) <-> (S61,pt1),
    (S60,pt3) <-> (S62,pt1),
    (S61,pt2) <-> (S63,pt1),
    (S62,pt2) <-> (S63,pt2),
    (S63,pt3) <-> (S64,pt1),
    (S64,pt2) <-> (S65,pt1),
    (S64,pt3) <-> (S66,pt1),
    (S65,pt2) <-> (S67,pt1),
    (S66,pt2) <-> (S67,pt2),
    (S67,pt3) <-> (S68,pt1),
    (S68,pt2) <-> (S69,pt1),
    (S68,pt3) <-> (S70,pt1),
    (S69,pt2) <-> (S71,pt1),
    (S7,pt3) <-> (S8,pt1),
    (S70,pt2) <-> (S71,pt2),
    (S71,pt3) <-> (S72,pt1),
    (S72,pt2) <-> (S73,pt1),
    (S72,pt3) <-> (S74,pt1),
    (S73,pt2) <-> (S75,pt1),
    (S74,pt2) <-> (S75,pt2),
    (S75,pt3) <-> (S76,pt1),
    (S76,pt2) <-> (S77,pt1),
    (S76,pt3) <-> (S78,pt1),
    (S77,pt2) <-> (S79,pt1),
    (S78,pt2) <-> (S79,pt2),
    (S79,pt3) <-> (S80,pt1),
    (S8,pt2) <-> (S9,pt1),
    (S8,pt3) <-> (S10,pt1),
    (S80,pt2) <-> (S81,pt1),
    (S80,pt3) <-> (S82,pt1),
    (S81,pt2) <-> (S83,pt1),
    (S82,pt2) <-> (S83,pt2),
    (S83,pt3) <-> (S84,pt1),
    (S84,pt2) <-> (S85,pt1),
    (S84,pt3) <-> (S86,pt1),
    (S85,pt2) <-> (S87,pt1),
    (S86,pt2) <-> (S87,pt2),
    (S87,pt3) <-> (S88,pt1),
    (S88,pt2) <-> (S89,pt1),
    (S88,pt3) <-> (S90,pt1),
    (S89,pt2) <-> (S91,pt1),
    (S9,pt2) <-> (S11,pt1),
    (S90,pt2) <-> (S91,pt2),
    (S91,pt3) <-> (S92,pt1),
    (S92,pt2) <-> (S93,pt1),
    (S92,pt3) <-> (S94,pt1),
    (S93,pt2) <-> (S95,pt1),
    (S94,pt2) <-> (S95,pt2),
    (S95,pt3) <-> (H1,pt1)
  }
}

programs{ H0 -> h0, H1 -> h1,
  S0 -> s0, S1 -> s1, S10 -> s2, S11 -> s3, S12 -> s0, S13 -> s1, S14 -> s2, S15 -> s3, S16 -> s0, S17 -> s1, S18 -> s2, S19 -> s3, S2 -> s2, S20 -> s0, S21 -> s1, S22 -> s2, S23 -> s3, S24 -> s0, S25 -> s1, S26 -> s2, S27 -> s3, S28 -> s0, S29 -> s1, S3 -> s3, S30 -> s2, S31 -> s3, S32 -> s0, S33 -> s1, S34 -> s2, S35 -> s3, S36 -> s0, S37 -> s1, S38 -> s2, S39 -> s3, S4 -> s0, S40 -> s0, S41 -> s1, S42 -> s2, S43 -> s3, S44 -> s0, S45 -> s1, S46 -> s2, S47 -> s3, S48 -> s0, S49 -> s1, S5 -> s1, S50 -> s2, S51 -> s3, S52 -> s0, S53 -> s1, S54 -> s2, S55 -> s3, S56 -> s0, S57 -> s1, S58 -> s2, S59 -> s3, S6 -> s2, S60 -> s0, S61 -> s1, S62 -> s2, S63 -> s3, S64 -> s0, S65 -> s1, S66 -> s2, S67 -> s3, S68 -> s0, S69 -> s1, S7 -> s3, S70 -> s2, S71 -> s3, S72 -> s0, S73 -> s1, S74 -> s2, S75 -> s3, S76 -> s0, S77 -> s1, S78 -> s2, S79 -> s3, S8 -> s0, S80 -> s0, S81 -> s1, S82 -> s2, S83 -> s3, S84 -> s0, S85 -> s1, S86 -> s2, S87 -> s3, S88 -> s0, S89 -> s1, S9 -> s1, S90 -> s2, S91 -> s3, S92 -> s0, S93 -> s1, S94 -> s2, S95 -> s3
}

query probability(arrived@H1);

packet_fields{ }

def h0(){
  fwd(1);
}
def h1() state arrived(0){
  arrived=1;
  drop;
}
def s0(){
  if flip(1/2){
    fwd(2);
  }else{
    fwd(3);
  }
}
def s1(){
  fwd(2);
}
def s2()state failing(2){
  if failing == 2 { failing = flip(1/1000); }
  if failing == 1 { drop }
  else{ fwd(2); }
}
def s3(){
  fwd(3);
}


def scheduler(){
  actions := ([]: (R x R)[]);
  for i in [0..k){
    if (Q_in@i).size() > 0 { actions ~= [(RunSw,i)]; }
    if (Q_out@i).size() > 0 { actions ~= [(FwdQ,i)]; }
  }
  return actions[uniformInt(0,actions.length-1)];
}

