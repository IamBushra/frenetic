# OASIS_START
# DO NOT EDIT (digest: cea6fa374886210cdb1a7930c48805e8)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library frenetic
"lib/frenetic.cmxs": use_frenetic
<lib/*.ml{,i,y}>: package(base64)
<lib/*.ml{,i,y}>: package(compiler-libs.common)
<lib/*.ml{,i,y}>: package(core)
<lib/*.ml{,i,y}>: package(cstruct)
<lib/*.ml{,i,y}>: package(cstruct.ppx)
<lib/*.ml{,i,y}>: package(ipaddr)
<lib/*.ml{,i,y}>: package(menhirLib)
<lib/*.ml{,i,y}>: package(ocamlgraph)
<lib/*.ml{,i,y}>: package(ppx_compare)
<lib/*.ml{,i,y}>: package(ppx_deriving.std)
<lib/*.ml{,i,y}>: package(ppx_enumerate)
<lib/*.ml{,i,y}>: package(ppx_fields_conv)
<lib/*.ml{,i,y}>: package(ppx_sexp_conv)
<lib/*.ml{,i,y}>: package(ppx_type_conv)
<lib/*.ml{,i,y}>: package(sedlex)
<lib/*.ml{,i,y}>: package(sexplib)
<lib/*.ml{,i,y}>: package(str)
<lib/*.ml{,i,y}>: package(tcpip)
<lib/*.ml{,i,y}>: package(tcpip.unix)
<lib/*.ml{,i,y}>: package(threads)
<lib/*.ml{,i,y}>: package(yojson)
# Executable nominal
"nominal/nominal.byte": package(base64)
"nominal/nominal.byte": package(compiler-libs.common)
"nominal/nominal.byte": package(core)
"nominal/nominal.byte": package(cstruct)
"nominal/nominal.byte": package(cstruct.ppx)
"nominal/nominal.byte": package(ipaddr)
"nominal/nominal.byte": package(menhirLib)
"nominal/nominal.byte": package(ocamlgraph)
"nominal/nominal.byte": package(ppx_compare)
"nominal/nominal.byte": package(ppx_deriving.std)
"nominal/nominal.byte": package(ppx_enumerate)
"nominal/nominal.byte": package(ppx_fields_conv)
"nominal/nominal.byte": package(ppx_sexp_conv)
"nominal/nominal.byte": package(ppx_type_conv)
"nominal/nominal.byte": package(sedlex)
"nominal/nominal.byte": package(sexplib)
"nominal/nominal.byte": package(str)
"nominal/nominal.byte": package(tcpip)
"nominal/nominal.byte": package(tcpip.unix)
"nominal/nominal.byte": package(threads)
"nominal/nominal.byte": package(yojson)
"nominal/nominal.byte": use_frenetic
<nominal/*.ml{,i,y}>: package(base64)
<nominal/*.ml{,i,y}>: package(compiler-libs.common)
<nominal/*.ml{,i,y}>: package(core)
<nominal/*.ml{,i,y}>: package(cstruct)
<nominal/*.ml{,i,y}>: package(cstruct.ppx)
<nominal/*.ml{,i,y}>: package(ipaddr)
<nominal/*.ml{,i,y}>: package(menhirLib)
<nominal/*.ml{,i,y}>: package(ocamlgraph)
<nominal/*.ml{,i,y}>: package(ppx_compare)
<nominal/*.ml{,i,y}>: package(ppx_deriving.std)
<nominal/*.ml{,i,y}>: package(ppx_enumerate)
<nominal/*.ml{,i,y}>: package(ppx_fields_conv)
<nominal/*.ml{,i,y}>: package(ppx_sexp_conv)
<nominal/*.ml{,i,y}>: package(ppx_type_conv)
<nominal/*.ml{,i,y}>: package(sedlex)
<nominal/*.ml{,i,y}>: package(sexplib)
<nominal/*.ml{,i,y}>: package(str)
<nominal/*.ml{,i,y}>: package(tcpip)
<nominal/*.ml{,i,y}>: package(tcpip.unix)
<nominal/*.ml{,i,y}>: package(threads)
<nominal/*.ml{,i,y}>: package(yojson)
<nominal/*.ml{,i,y}>: use_frenetic
# OASIS_STOP
<lib/Frenetic_NetKAT_Lexer.*>: package(ppx_import)
# see https://github.com/janestreet/ppx_inline_test/issues/3
<lib_test/*.ml{,i}>: predicate(ppx_driver)
<lib_test/*.ml{,i}>: pp(ppx-jane -dump-ast -inline-test-lib frenetic)
true: thread
true: -traverse
# SJS: use shared extern token file (-> see myocamlbuild.ml)
true: extern_tokens
