$ probnetkat.with_topo -fail-with 1/1000 -scheme ECMP -cps ../../examples/topozoo/Arn.dot
[compile server] /home/abilene/.opam/ocaml-base-compiler.4.07.1/lib/probnetkat/../../bin/probnetkat.rpc_compile_branch -order (F1 F0 Meta4 Meta2 Meta1 Meta0 Meta6 Meta3 Meta5 Meta9 Meta7 Meta8 Meta11 Meta10 F2 F3 F4 F5 F6 F7 F8 F9 F10 F11 F12 F13 F14 F15 F16 F17 F18 F19 Meta12 Meta13 Meta14 Meta15 Meta16 Meta17 Meta18 Meta19) -cps true -j 32 -rj 32
[compile server] read: input 1 ... received.
[compile server] read: input 2 ... received.
[compile server] read: input 3 ... received.
[compile server] read: input 4 ... received.
[compile server] read: input 5 ... received.
[compile server] read: input 6 ... received.
[compile server] read: input 7 ... received.
[compile server] read: input 8 ... received.
[compile server] read: input 9 ... received.
[compile server] read: input 10 ... received.
[compile server] read: input 11 ... received.
[compile server] read: input 12 ... received.
[compile server] read: input 13 ... received.
[compile server] read: input 14 ... received.
[compile server] read: input 15 ... received.
[compile server] read: input 16 ... received.
[compile server] read: input 17 ... received.
[compile server] read: input 18 ... received.
[compile server] read: input 19 ... received.
[compile server] read: input 20 ... received.
[compile server] read: input 21 ... received.
[compile server] read: input 22 ... received.
[compile server] read: input 23 ... received.
[compile server] read: input 24 ... received.
[compile server] read: input 25 ... received.
[compile server] read: input 26 ... received.
[compile server] read: input 27 ... received.
[compile server] read: input 28 ... received.
[compile server] read: input 29 ... received.
[compile server] read: input 30 ... eof.
[compile server] -> all inputs received!
[compile server] sending back result...
[compile server] -> done.
[compile server] Shutting down. Bye.
start sending fdds as matrices to python...
start sending ap...
start naive fixpoint...
--> sending ap done! 0.006525 seconds
start sending not_a...
--> sending not_a done! 0.003825 seconds
--> sending fdds as matrices to python done! 0.010417 seconds
--> naive fixpoint done! 0.074327 seconds
start serializing & sending Fdd...
--> serializing & sending Fdd done! 0.000293 seconds
*** ocaml won race!
start deserializing & receiving Fdd...
--> deserializing & receiving Fdd done! 0.000534 seconds
E[delivered] = 28926061983/29000000000
E[delivered] â‰ˆ 0.997450

real	0m4.237s
user	0m3.630s
sys	0m3.150s
